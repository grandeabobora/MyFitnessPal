data(dados[, 1][1], package=as.character(dados[, 2][1]))
dados
dados[, 2][1]
as.character(dados[, 2][1])
dados[, 1][1]
data(as.character(dados[, 1][1]), package=as.character(dados[, 2][1]))
data(list=as.character(dados[, 1][1]), package=as.character(dados[, 2][1]))
ls()
.dados <- data(package = .packages(all.available = TRUE))
ls()
ls()
grep("dados", ls())
grep(!"dados", ls())
!grep("dados", ls())
grep("dados", ls())
grep("dados", ls()) %in% ls()
ls() %in% grep("dados", ls())
length(ls())
1:length(ls()) %in% grep("dados", ls())
!(1:length(ls()) %in% grep("dados", ls()))
ls[!(1:length(ls()) %in% grep("dados", ls()))]
ls()[!(1:length(ls()) %in% grep("dados", ls()))]
rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
ls()
dados <- data(package = .packages(all.available = TRUE))
dados <- data.frame(dataset=dados[[3]][, 3],
package=dados[[3]][, 1])
data(list=as.character(dados[, 1][1]), package=as.character(dados[, 2][1]))
ls()
ls()[!(1:length(ls()) %in% grep("dados", ls()))]
dim(ls()[!(1:length(ls()) %in% grep("dados", ls()))])
ls()[!(1:length(ls()) %in% grep("dados", ls()))]
ls()[!(1:length(ls()) %in% grep("dados", ls()))]
eval(AirPassengers)
eval("AirPassengers")
?as.character()
deparse("AirPassengers")
dim(deparse("AirPassengers"))
?ls
mget("AirPassengers")
dim(mget("AirPassengers"))
dim(mget("AirPassengers")[1])
dim(mget("AirPassengers")[[1]])
lapply(mget(ls), dim)
lapply(mget(ls()), dim)
ls()
AirPassengers
AirPassengers <- as.data.frame(AirPassengers)
lapply(mget(ls()), dim)
AirPassengers
data(list=as.character(dados[, 1]), package=as.character(dados[, 2][1]))
warnings()
ls()
lapply(mget(ls()), dim)
as.character(dados[, 1])
dados[, 2]==dados[, 2][1]
data(list=as.character(dados[dados[, 2]==dados[, 2][1], 1]), package=as.character(dados[, 2][1]))
warnings()
as.character(dados[, 2][1]
dados[, 2][1]
length(unique(dados[, 2][1]))
length(unique(dados[, 2][1]))
length(unique(dados[, 2][1]))
length(unique(dados[, 2]))
1:length(unique(dados[, 2]))
j <- 1
data(list=as.character(dados[dados[, 2]==dados[, 2][j], 1]), package=as.character(dados[, 2][j]))
j <- 2
data(list=as.character(dados[dados[, 2]==dados[, 2][j], 1]), package=as.character(dados[, 2][j]))
warnings()
as.character(dados[, 2][j]
as.character(dados[, 2][j])
j <- 1
length(unique(dados[, 2][1]))
as.character(dados[, 2][j])
as.character(dados[dados[, 2]==dados[, 2][j], 2])
j
j <- 2
as.character(dados[dados[, 2]==dados[, 2][j], 2])
dados[, 2][j], 2]
dados[, 2][j], 2])
dados[, 2][j]
dados[, 2][j]
dados[, 2][1]
dados[, 2][2]
library(dplyr)
pacotes <- unique(dados$package)
dados %>%
filter(package==pacote[1])
dados %>%
filter(package==pacotes[1])
dadados <- dados %>%
filter(package==pacotes[1])
dadados <- dados %>%
filter(package==pacotes[j])
dados %>%
filter(package==pacotes[j])
data(package=pacotes[j])
data(package=as.character(pacotes[j]))
ls()
rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
data(package=as.character(pacotes[j]))
pacotes <- unique(dados$package)
ls()[!(1:length(ls()) %in% grep("dados"|"pacotes", ls()))]
ls()[!(1:length(ls()) %in% grep(c("dados", "pacotes"), ls()))]
?grep
ls()[!(1:length(ls()) %in% grep("dados", ls()))]
rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
j <- 1
dadados <- dados %>%
filter(package==pacotes[j])
data(package=as.character(pacotes[j]))
ls()
data(dadados$dataset, package=as.character(pacotes[j]))
dadados <- dados %>%
filter(package==pacotes[j])
dadados
data(dadados$dataset, package=as.character(pacotes[j]))
dadados$dataset
dadados <- dados %>%
filter(package==pacotes[j])
dadados
dadados$dataset
dadados$dataset <- as.vector(dadados$dataset)
data(dadados$dataset, package=as.character(pacotes[j]))
data(list=dadados$dataset, package=as.character(pacotes[j]))
warnings()
#for (j in 1:length(unique(dados[, 2]))) {
for (j in 1:10) {
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
lapply(mget(ls()), dim)
rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
}
ls()
#for (j in 1:length(unique(dados[, 2]))) {
for (j in 1:10) {
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
lapply(mget(ls()), dim)
rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
}
tamDados <- NULL
j <- 1
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
tamDados
library(dplyr)
dados <- data(package = .packages(all.available = TRUE))
dados <- data.frame(dataset=dados[[3]][, 3],
package=dados[[3]][, 1])
tamDados <- NULL
#for (j in 1:length(unique(dados[, 2]))) {
for (j in 1:10) {
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
}
ls()[!(1:length(ls()) %in% grep("dados", ls()))])
dados <- data(package = .packages(all.available = TRUE))
dados <- data.frame(dataset=dados[[3]][, 3],
package=dados[[3]][, 1])
tamDados <- NULL
j <- 1
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
ls()[!(1:length(ls()) %in% grep("dados", ls()))]
a <- ls()[!(1:length(ls()) %in% grep("dados", ls()))]
b <- ls()[!(1:length(ls()) %in% grep("tamDados", ls()))]
intersect(a, b)
rm(list=intersect(a, b))
ls()
library(dplyr)
dados <- data(package = .packages(all.available = TRUE))
dados <- data.frame(dataset=dados[[3]][, 3],
package=dados[[3]][, 1])
tamDados <- NULL
#for (j in 1:length(unique(dados[, 2]))) {
for (j in 1:10) {
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
a <- ls()[!(1:length(ls()) %in% grep("dados", ls()))]
b <- ls()[!(1:length(ls()) %in% grep("tamDados", ls()))]
rm(list=intersect(a, b))
#rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
}
tamDados
library(dplyr)
dados <- data(package = .packages(all.available = TRUE))
dados <- data.frame(dataset=dados[[3]][, 3],
package=dados[[3]][, 1])
tamDados <- NULL
ti <- proc.time()
for (j in 1:length(unique(dados[, 2]))) {
#for (j in 1:10) {
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
a <- ls()[!(1:length(ls()) %in% grep("dados", ls()))]
b <- ls()[!(1:length(ls()) %in% grep("tamDados", ls()))]
rm(list=intersect(a, b))
#rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
}
proc.time() - ti
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
ti <- proc.time()
for (j in 1:length(unique(dados[, 2]))) {
#for (j in 1:10) {
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
a1 <- ls()[!(1:length(ls()) %in% grep("dados", ls()))]
a2 <- ls()[!(1:length(ls()) %in% grep("tamDados", ls()))]
a2 <- ls()[!(1:length(ls()) %in% grep("ti", ls()))]
rm(list=intersect(a1, a2, a3))
#rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
}
proc.time() - ti
library(dplyr)
dados <- data(package = .packages(all.available = TRUE))
dados <- data.frame(dataset=dados[[3]][, 3],
package=dados[[3]][, 1])
tamDados <- NULL
ti <- proc.time()
for (j in 1:length(unique(dados[, 2]))) {
#for (j in 1:10) {
library(dplyr)
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
a1 <- ls()[!(1:length(ls()) %in% grep("dados", ls()))]
a2 <- ls()[!(1:length(ls()) %in% grep("tamDados", ls()))]
a2 <- ls()[!(1:length(ls()) %in% grep("ti", ls()))]
rm(list=intersect(a1, a2, a3))
#rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
}
proc.time() - ti
tamDados
dadados
library(dplyr)
dados <- data(package = .packages(all.available = TRUE))
dados <- data.frame(dataset=dados[[3]][, 3],
package=dados[[3]][, 1])
tamDados <- NULL
ti <- proc.time()
for (j in 1:length(unique(dados[, 2]))) {
#for (j in 1:10) {
library(dplyr)
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
a1 <- ls()[!(1:length(ls()) %in% grep("dados", ls()))]
a2 <- ls()[!(1:length(ls()) %in% grep("tamDados", ls()))]
a2 <- ls()[!(1:length(ls()) %in% grep("ti", ls()))]
rm(list=intersect(a1, a2, a3))
#rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
}
library(car)
library(dplyr)
dados <- data(package = .packages(all.available = TRUE))
dados <- data.frame(dataset=dados[[3]][, 3],
package=dados[[3]][, 1])
tamDados <- NULL
ti <- proc.time()
for (j in 1:length(unique(dados[, 2]))) {
#for (j in 1:10) {
library(dplyr)
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
a1 <- ls()[!(1:length(ls()) %in% grep("dados", ls()))]
a2 <- ls()[!(1:length(ls()) %in% grep("tamDados", ls()))]
a2 <- ls()[!(1:length(ls()) %in% grep("ti", ls()))]
rm(list=intersect(a1, a2, a3))
#rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
}
proc.time() - ti
ti <- proc.time()
for (j in 1:length(unique(dados[, 2]))) {
#for (j in 1:10) {
library(dplyr)
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
a1 <- ls()[!(1:length(ls()) %in% grep("dados", ls()))]
a2 <- ls()[!(1:length(ls()) %in% grep("tamDados", ls()))]
a3 <- ls()[!(1:length(ls()) %in% grep("ti", ls()))]
rm(list=intersect(a1, a2, a3))
#rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
}
proc.time() - ti
library(dplyr)
dados <- data(package = .packages(all.available = TRUE))
dados <- data.frame(dataset=dados[[3]][, 3],
package=dados[[3]][, 1])
tamDados <- NULL
ti <- proc.time()
for (j in 1:length(unique(dados[, 2]))) {
#for (j in 1:10) {
library(dplyr)
pacotes <- unique(dados$package)
dadados <- dados %>%
filter(package==pacotes[j])
dadados$dataset <- as.vector(dadados$dataset)
data(list=dadados$dataset, package=as.character(pacotes[j]))
tamDados <- c(tamDados, lapply(mget(ls()), dim))
a1 <- ls()[!(1:length(ls()) %in% grep("dados", ls()))]
a2 <- ls()[!(1:length(ls()) %in% grep("tamDados", ls()))]
a3 <- ls()[!(1:length(ls()) %in% grep("ti", ls()))]
rm(list=intersect(intersect(a1, a2), a3))
#rm(list = ls()[!(1:length(ls()) %in% grep("dados", ls()))])
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
}
proc.time() - ti
tamDados
setwd("~/Documents/Lectures/UFRN/EST0114 - Métodos Estatísticos/Aulas/Unidade VII/BDMEP")
Sys.setlocale("LC_TIME","English")
Sys.setlocale("LC_TIME", "C")
Sys.setlocale("LC_TIME", "English")
Sys.setlocale("LC_TIME", "Brazil")
?Sys.setlocale
Sys.setlocale("LC_TIME", "en")
sessionInfo()
Sys.setlocale("LC_TIME", "en_US.UTF-8")
sessionInfo()
Sys.setlocale("LC_TIME", "en_US.UTF-8")
?Sys.setlocale
Sys.setlocale(category = "LC_ALL", locale = "en_US.UTF-8")
options(tz="Europe/Berlin")
Sys.getenv("TZ")
Sys.setenv(TZ="Europe/Berlin")
Sys.getenv("TZ")
as.POSIXct(t, tz=getOption("tz"))
t <- "2011-11-08 09:42:00"
as.POSIXct(t, tz=getOption("tz"))
library(ggplot2)
library(dplyr)
library(forecast)
library(lubridate)
library(wesanderson)
library(scales)
dados <- as_data_frame(read.table(file="data.csv", sep=",", header=TRUE))
setwd("~/Documents/Research/github/MyFitnessPal")
dados <- as_data_frame(read.table(file="data.csv", sep=",", header=TRUE))
dados <- dados %>%
select(-Calories)
dim(dados)
str(dados)
dados$Date           <- ymd(dados$Date)
dados$Year           <- year(dados$Date)
dados$Month          <- month(dados$Date)
dados$Day            <- day(dados$Date)
dados$GrupoDiaSemana <- wday(dados$Date, label=TRUE)
dados$GrupoMes       <- ymd(paste(dados$Year, dados$Month, "01", sep="-"))
g1 <- ggplot(data=dados, aes(x=Date)) +
labs(x="Data", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Longo Prazo"), method="loess", se=FALSE, span=0.5) +
geom_smooth(aes(y=Weight, colour="Curto Prazo"), method="loess", se=FALSE, span=0.25) +
scale_colour_manual("", values = wes_palette("Zissou")[c(3, 5, 1)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
g1
pdf("grafico01.pdf")
g1
dev.off()
g2 <- ggplot(data=dados, aes(x=GrupoMes, y=Weight, group=GrupoMes, fill=as.factor(GrupoMes))) +
labs(x="Meses", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Meses", values=rep(wes_palette(5, name="Zissou"), 20)[1:length(unique(dados$GrupoMes))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
guides(fill=FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
pdf("grafico02.pdf")
g2
dev.off()
ggplot(data=dados, aes(x=GrupoDiaSemana, y=Weight, group=GrupoDiaSemana, fill=GrupoDiaSemana)) +
labs(x="Dia da Semana", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Dia da Semana", values=rep(wes_palette(3, name="Royal1"), 20)[1:length(unique(dados$GrupoDiaSemana))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
guides(fill=FALSE) +
theme_bw()
dados %>%
group_by(Year, Month) %>%
summarise(Mediana=median(Weight), Média=mean(Weight)) %>%
mutate(Data=ymd(paste(Year, Month, 01, sep="-"))) %>%
select(Data, Média, Mediana) %>%
print(n=Inf)
dados %>%
arrange(Weight) %>%
select(Day, Month, Year, Weight, GrupoDiaSemana) %>%
print(n=20)
dados %>%
arrange(Weight) %>%
select(Day, Month, Year, Weight, GrupoDiaSemana) %>%
print(n=20) %>%
filter(Weight < 71)
dados %>%
arrange(Weight) %>%
head(n=20) %>%
group_by(Year) %>%
count()
dados %>%
arrange(Weight) %>%
head(n=50) %>%
count(GrupoDiaSemana) %>%
arrange(desc(n))
dados %>%
filter(Year==2017) %>%
arrange(Weight) %>%
head(n=30) %>%
count(GrupoDiaSemana) %>%
arrange(desc(n))
ajuste.arima <- auto.arima(dados$Weight, max.p=10, max.q=10, max.d=3, seasonal=TRUE, ic="aicc")
tsdiag(ajuste.arima)
plot(forecast(ajuste.arima, h=20))
install.packages(c("kyotil", "lubridate", "magick", "mda", "Metrics", "openssl", "ritis", "rplos", "shapes", "topicmodels"))
